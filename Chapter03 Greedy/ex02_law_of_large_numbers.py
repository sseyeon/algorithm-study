# - 문제
# 다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰 수를 만드는 법칙
# [2, 4, 5, 4, 6] 일 때 M(몇 번 더하는 지) = 8, K(반복 가능 횟수) = 3 으로 가정하면 
# 6 + 6 + 6 + 5 + 6 + 6 + 6 + 5 = 46 이 답

# - 입력 조건 
# 첫째 줄에 N (2 ~ 1000), M (1 ~ 10,000), K (1 ~ 10,000)의 자연수가 주어지며, 각 자연수는 공백으로 구분함 
# 둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다. 단, 각각의 자연수는 1 이상 10,000 이하의 수로 주어진다.
# 입력으로 주어지는 K는 항상 M 보다 작거나 같다.

# - 출력 조건
# 첫째 줄에 동빈이의 큰 수의 법칙에 따라 정해진 답을 출력한다.

# - 입력 예시 
# 5 8 3 
# 2 4 5 4 6

# - 출력 예시 
# 46 ( 6 6 6 )

# n, m, k 받기
n, m, k = map(int, input().split())

# arr 받기
arr = list(map(int, input().split()))

arr.sort()
first = arr[n - 1] # 가장 큰 수 
second = arr[n -2] # 두 번째로 큰 수

result = 0

while True: 
    for i in range(k):
        if m == 0:
            break
        result += first
        m -= 1
    if m == 0:
        break
    result += second
    m -= 1
print(result)